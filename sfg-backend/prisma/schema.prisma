// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password?
  LeagueMember LeagueMember[]
}

model Password {
  userId       String   @id @default(uuid())
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Season {
  id        String    @id @default(uuid())
  name      String
  startDate DateTime?
  endDate   DateTime?
  leagues   League[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model League {
  id           String         @id @default(uuid())
  name         String
  seasonId     String
  season       Season         @relation(fields: [seasonId], references: [id])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  LeagueMember LeagueMember[]
}

enum LeagueMemberRole {
  OWNER
  ADMIN
  MEMBER
}

model LeagueMember {
  id        String           @id @default(uuid())
  userId    String
  leagueId  String
  role      LeagueMemberRole
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  league League @relation(fields: [leagueId], references: [id], onDelete: Cascade)

  @@unique([leagueId, userId])
}
